FechaSolicitud 
FechaMantenimiento
EsLocal 


@item.FechaSolicitud?.ToString("dd/MM/yyyy")

@model GestionImpresoras.Models.Mantenimiento

@{
    ViewData["Title"] = "Editar";
}

<h1>Editar</h1>

<h4>Mantenimiento</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Editar">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="ImpresoraId" class="control-label"></label>
                <select asp-for="ImpresoraId" class ="form-control" asp-items="ViewBag.ImpresoraId"></select>
                <span asp-validation-for="ImpresoraId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EstadoMttoId" class="control-label"></label>
                <select asp-for="EstadoMttoId" class ="form-control" asp-items="ViewBag.EstadoMttoId"></select>
                <span asp-validation-for="EstadoMttoId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FechaSolicitud" class="control-label"></label>
                <input type="date" asp-for="FechaSolicitud" class="form-control" />
                <span asp-validation-for="<EUGPSCoordinates>FechaSolicitud</EUGPSCoordinates>" class="<EUGPSCoordinates>text-danger</EUGPSCoordinates>"></span>
            </div>
            <div class="<EUGPSCoordinates>form-group</EUGPSCoordinates>">
                <label asp-for="<EUGPSCoordinates>FechaMantenimiento</EUGPSCoordinates>" class="<EUGPSCoordinates>control-label</EUGPSCoordinates>"></label>
                <input type="<EUGPSCoordinates>date</EUGPSCoordinates>" asp-for="<EUGPSCoordinates>FechaMantenimiento</EUGPSCoordinates>" class="<EUGPSCoordinates>form-control</EUGPSCoordinates>" />
                <span asp-validation-for="<EUGPSCoordinates>FechaMantenimiento</EUGPSCoordinates>" class="<EUGPSCoordinates>text-danger</EUGPSCoordinates>"></span>
            </div>
            <div class="<EUGPSCoordinates>form-group</EUGPSCoordinates>">
                <div class="<EUGPSCoordinates>form-check</EUGPSCoordinates>">
                    <input type="<EUGPSCoordinates>checkbox</EUGPSCoordinates>" asp-for="<EUGPSCoordinates>EsLocal</EUGPSCoordinates>" class="<EUGPSCoordinates>form-check-input</EUGPSCoordinates>" />
                    <label asp-for="<EUGPSCoordinates>EsLocal</EUGPSCoordinates>" class="<EUGPSCoordinates>form-check-label</EUGPSCoordinates>">¿Es Mantenimiento Local?</label>
                </div>
                <span asp-validation-for="<EUGPSCoordinates>EsLocal</EUGPSCoordinates>" class="<EUGPSCoordinates>text-danger</EUGP


----------------------------------------------------------------------------------------------------------------
@model GestionImpresoras.Models.Mantenimiento

@{
    ViewData["Title"] = "Borrar";
}

<h1>Borrar</h1>

<h3>¿Estás seguro de que quieres borrar este elemento?</h3>
<div>
    <h4>Mantenimiento</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ImpresoraId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ImpresoraId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EstadoMttoId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EstadoMttoId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FechaSolicitud)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FechaSolicitud)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FechaMantenimiento)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FechaMantenimiento)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EsLocal)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EsLocal)
        </dd>
    </dl>

    <form asp-action="Borrar">

        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Borrar" class="btn btn-danger" /> |
        <a asp-action="Index">Volver a la lista</a>
    </form>
</div>

------------------------------------------------------------------------------------------


[HttpGet]
public async Task<IActionResult> Borrar(int? id)
{
    if (id == null)
    {
        return NotFound();
    }

    var mantenimiento = await _contexto.Mantenimientos
        .FirstOrDefaultAsync(m => m.Id == id);
    if (mantenimiento == null)
    {
        return NotFound();
    }

    return View(mantenimiento);
}

[HttpPost, ActionName("Borrar")]
[ValidateAntiForgeryToken]
public async Task<IActionResult> BorrarConfirmado(int id)
{
    var mantenimiento = await _contexto.Mantenimientos.FindAsync(id);
    _contexto.Mantenimientos.Remove(mantenimiento);
    await _contexto.SaveChangesAsync();
    return RedirectToAction(nameof(Index));
}

[HttpGet]
public async Task<IActionResult> Editar(int? id)
{
    if (id == null)
    {
        return NotFound();
    }

    var mantenimiento = await _contexto.Mantenimientos.FindAsync(id);
    if (mantenimiento == null)
    {
        return NotFound();
    }
    return View(mantenimiento);
}

[HttpPost]
[ValidateAntiForgeryToken]
public async Task<IActionResult> Editar(int id, [Bind("Id,ImpresoraId,EstadoMttoId,FechaSolicitud,FechaMantenimiento,EsLocal")] Mantenimiento mantenimiento)
{
    if (id != mantenimiento.Id)
    {
        return NotFound();
    }

    if (ModelState.IsValid)
    {
        try
        {
            _contexto.Update(mantenimiento);
            await _contexto.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException)
        {
            if (!MantenimientoExists(mantenimiento.Id))
            {
                return NotFound();
            }
            else
            {
                throw;
            }
        }
        return RedirectToAction(nameof(Index));
    }
    return View(mantenimiento);
}

private bool MantenimientoExists(int id)
{
    return _contexto.Mantenimientos.Any(e => e.Id == id);
}

---------------------------------------



